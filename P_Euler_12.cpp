//#PROBLEMA 12
//#Highly divisible triangular number
/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/
#include <iostream>
#include <vector>
using namespace std;
int main()
{
  int MaxDivisors = 1000;
  vector<int>smallest;
  smallest.push_back(0);
  int index    = 0;
  int triangle = 0;
  while (smallest.size() < MaxDivisors)
  {
    index++;
    triangle += index;
    if (smallest.size() > 300 && triangle % 10 != 0)
      continue;
    int divisors = 0;
    int i        = 1;
    while (i*i < triangle)
    {
      if (triangle % i == 0)
        divisors += 2;
      i++;
    }
    if (i*i == triangle)
      divisors++;
    while (smallest.size() <= divisors)
      smallest.push_back(triangle);
  }
  cout<<smallest[501];
  return 0;
}
